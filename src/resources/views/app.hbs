<link rel="stylesheet" href="css/style.css">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<header>
    <div class="searchBox">
        <img src="img/search.svg" alt="">
        <input type="text" placeholder="Enter github repository url" value="{{url}}">
    </div>
    <button class="submitButton">SUBMIT</button>
</header>
<div class="container">
    <div class="title">
        <div class="userAccount">
            <div class="userAvatar">
                <img class="userAvatar" src="{{userAvatar}}" alt="">
            </div>
            <p class="userName">{{userName}}</p>
        </div>
        <div class="repositoryInfo">
            <div class="githubLogo">
                <p>GitHub</p>
                <img src="img/githublogo.png" alt="">
            </div>
            <div class="repoFullname">
                <p>{{repository}}</p>
            </div>
            <div class="repoDefaultBranch">
                <img src="img/refresh.svg" alt="">
                <p>{{defaultBranch}}</p>
            </div>
        </div>
    </div>
    <div class="content">
        <div class="loading">
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
        </div>
        <div class="forksContainer">
        </div>
    </div>
</div>
<script>
    var url = "{{url}}";
    console.log(url);

    var request = new XMLHttpRequest();
    request.open('POST', 'api/run', true);
    request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
    request.onload = function () {
        if (this.status >= 200 && this.status < 400) {
            // Success!
            var data = JSON.parse(this.response);
            let contentContainer = document.querySelector('.content');
            contentContainer.removeChild(document.querySelector('.content .loading'));
            parseForksData(data);
        }
    };
    request.send(`url=${url}`);

    function parseForksData(forksArray) {
        var forksContainer = document.querySelector('.forksContainer');
        for (let item of forksArray) {
            let fork = document.createElement('div');
            fork.classList.add('fork');
            let forkItem = document.createElement('div');
            forkItem.classList.add('forkItem');
            forkItem.innerHTML = `
                <input type="hidden" id="apiUrl" value="${item.url}">
                <img src="img/avatar.webp" alt="" class="forkUserAvatar">
                <p class="forkRepoName">${item.full_name}</p>`;
            let branchContainer = document.createElement('div');
            branchContainer.classList.add('branchContainer');
            forkItem.addEventListener('click', () => {
                onForkItemClick(fork, item);
            })
            fork.appendChild(forkItem);
            fork.appendChild(branchContainer);
            forksContainer.appendChild(fork);
        }
    }

    function onForkItemClick(forkItem, data) {
        var form = document.createElement('form');
        form.setAttribute('method', 'POST');
        form.setAttribute('action', '/track_commit');
        form.innerHTML = 
            `<input type="text" name="rootFullName" value="{{repository}}">
            <input type="text" name="rootBranch" value="{{defaultBranch}}">
            <input type="text" name="forkRepoUrl" value="${data.url}">`;
        document.querySelector('body').appendChild(form);
        form.submit();
    }
    /*function onForkItemClick(forkItem, forkItem) {
        var branchContainer = forkItem.querySelector('.branchContainer');

        var request = new XMLHttpRequest();
        request.open('POST', 'api/get_branch', true);
        request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
        request.onload = function () {
            if (this.status >= 200 && this.status < 400) {
                // Success!
                var data = JSON.parse(this.response);
                for (let branch of data) {
                    let branchItem = document.createElement('div');
                    branchItem.classList.add('branch');
                    branchItem.innerHTML = `
                        <div class="branchTitle">
                            <p>${branch.name}</p>
                        </div>
                        <div class="commitContainer">
                        </div>`;
                    branchItem.addEventListener('click', () => {
                        onBranchClick(branchItem, branch.name, forkRepoData);
                    })
                    branchContainer.appendChild(branchItem);
                }
            }
        };
        request.send(`url=${forkRepoData.url}`);
    }*/

    function onBranchClick(branchItem, branchName, forkRepoData) {
        var request = new XMLHttpRequest();
        request.open('POST', 'api/compare', true);
        request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
        request.onload = function () {
            if (this.status >= 200 && this.status < 400) {
                // Success!
                console.log(this.response);
                /*var data = JSON.parse(this.response);
                for (var branch of data) {
                    let branchItem = document.createElement('div');
                    branchItem.classList.add('branch');
                    branchItem.innerHTML = `
                        <div class="branchTitle">
                            <p>${branch.name}</p>
                        </div>
                        <div class="commitContainer">
                        </div>`;
                    branchContainer.appendChild(branchItem);
                }*/
            }
        };
        var rootUrl = "{{url}}";
        rootUrl = rootUrl.replace("github.com", "api.github.com/repos");
        request.send(
            `url=${forkRepoData.url}`
            +   `&rootUrl=${rootUrl}`
            +   `&rootBranch={{defaultBranch}}`
            +   `&compareUser=${forkRepoData.owner.login}`
            +   `&compareRepo=${forkRepoData.name}`
            +   `&compareBranch=${branchName}`
        );
    }
</script>